RewriteEngine On

# Redirect .html URLs to clean URLs
RewriteCond %{THE_REQUEST} /([^.]+)\.html [NC]
RewriteRule ^ /%1 [NC,L,R]

# Internally rewrite clean URLs to .html files
RewriteCond %{REQUEST_FILENAME}.html -f
RewriteRule ^ %{REQUEST_URI}.html [NC,L]

# This configuration file should be uploaded to the server as "<Application Folder>/Build/.htaccess"
# NOTE: "mod_mime" Apache module must be enabled for this configuration to work.
<IfModule mod_mime.c>

    # The following lines are required for builds without decompression fallback, compressed with gzip
    RemoveType .gz
    AddEncoding gzip .gz
    AddEncoding gzip .wasm.gz
    AddType application/gzip .data.gz  # Correct for Safari bug
    AddType application/wasm .wasm.gz
    AddType application/javascript .js.gz
    AddType application/octet-stream .symbols.json.gz

    # The following lines are required for builds without decompression fallback, compressed with Brotli
    RemoveType .br
    RemoveLanguage .br
    AddEncoding br .br
    AddType application/octet-stream .data.br
    AddType application/wasm .wasm.br
    AddType application/javascript .js.br
    AddType application/octet-stream .symbols.json.br

    # The following line improves loading performance for uncompressed builds
    AddType application/wasm .wasm

    # Uncomment the following line to improve loading performance for gzip-compressed builds with decompression fallback
    AddEncoding gzip .unityweb

    # Uncomment the following line to improve loading performance for brotli-compressed builds with decompression fallback
    # AddEncoding br .unityweb

</IfModule>

<IfModule mod_headers.c>
    <FilesMatch "\.wasm((\.gz|\.br))?$">
        Header Set "Content-Type" "application/wasm"
    </FilesMatch>
    
    # Ensure that gzipped files are served with the correct encoding
    <FilesMatch "\.gz$">
        Header set Content-Encoding "gzip"
    </FilesMatch>
    
    # Set encoding for Brotli compressed files
    <FilesMatch "\.br$">
        Header set Content-Encoding "br"
    </FilesMatch>
</IfModule>